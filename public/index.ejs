<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MediaHub Exchange File Explorer</title>
    <link href="https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined" rel="stylesheet">
    <link rel="stylesheet" href="/css/info.css">
    <link rel="stylesheet" href="/css/auth.css">
    <link rel="stylesheet" href="/css/user.css">
    <link rel="stylesheet" href="/css/nav-bar.css">
    <link rel="stylesheet" href="/css/prompt.css">
    <link rel="stylesheet" href="/css/search.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js"></script>
    <style>
        body {
          line-height: 1.15;
          -webkit-text-size-adjust: 100%;
          color-scheme: dark;
          --balloon-color: rgba(16,16,16,0.95);
          --balloon-font-size: 12px;
          --balloon-move: 4px;
          margin: 0;
          font-family: Roboto,Noto,Helvetica,Arial,sans-serif;
          font-size: 15px;
          color: rgba(255,255,255,.87);
          background-color: #1E252F;
          counter-reset: katexEqnNo mmlEqnNo;
          transition: padding .3s cubic-bezier(0,0,.2,1);
        }
        #folders-container {
          max-width: 980px;
          padding-right: 8px;
          padding-left: 8px;
          margin-right: auto;
          margin-left: auto;
        }

        .tool-bar {
          display: flex;
          box-sizing: border-box;
          align-items: center;
          height: 56px;
          line-height: 56px;
          margin: 20px -8px 0 !important;
          padding: 15px !important;
          border-radius: 5px;
          margin-top: 30px !important;
          background-color: #ffffff0d!important;
          box-shadow: 0 0.2em 1em rgb(0 0 0 / 30%)!important
        }
        .folder-list {
          background-color: #ffffff0d!important;
          box-shadow: 0 0.2em 1em rgb(0 0 0 / 30%)!important;
          margin: 20px -8px 0 !important;
          padding: 15px !important;
          border-radius: 5px;
        }
        .toolbar-spacer {
          margin: 0;
          flex-grow: 1;
        }
        .search-bar {
          position: relative;
          min-height: 36px;
          transition: width .3s cubic-bezier(.4,0,.2,1);
          width: 36px;
          max-width: 400px;
        }
        .search-button {
          top: 4%;
          background: 0 0;
          border: none;
          transition: all .2s cubic-bezier(.4,0,.2,1),box-shadow .2s cubic-bezier(.4,0,1,1),-webkit-box-shadow .2s cubic-bezier(.4,0,1,1);
          min-width: 36px;
          height: 36px;
          border-radius: 50%;
          position: absolute;
        }

        .search-button:hover {
          background-color: rgba(0,0,0,.1)
        }
        .info-button:hover {
          background-color: rgba(0,0,0,.1)
        }
        .search-icon {
          bottom: 0;
          padding: 0;
          position: absolute;
          top: 50%;
          left: 50%;
          width: 24px;
          line-height: 24px;
          transform: translate(-12px,-12px);
          color: inherit;
          vertical-align: middle;
        }
        .info-button {
        position: relative;
        background: 0 0;
        border: none;
        transition: all .2s cubic-bezier(.4,0,.2,1),box-shadow .2s cubic-bezier(.4,0,1,1),-webkit-box-shadow .2s cubic-bezier(.4,0,1,1);
        min-width: 36px;
        height: 36px;
        border-radius: 50%;
        }
        .item-row {
          margin-right: -8px;
          margin-left: -8px;
        }
        .list {
          padding: 0;
          margin: 0;
          list-style: none;
        }

        .th {
          background-color: #29303a;
        }
        .list-item {
          border-radius: 5px;
          padding: 0 10px 0 5px !important;
          margin-bottom: 10px !important;
          transition: none;
          border: 1px solid rgb(255 255 255 / 10%)!important;
          align-items: center;
          display: flex;
          min-height: 48px;
          box-sizing: border-box;
        }
        
        .list-item>a {
          width: 100%;
          line-height: 3pc;
        }


        .list-item:not(.nohover):hover {
          background-color: rgba(0,0,0,.08);
          cursor: pointer;
        }

        .baritem-1 {
          position: relative;
          min-height: 1px;
          box-sizing: border-box;
          padding-right: 8px;
          padding-left: 8px;
          float: left;
          width: 58.333333%;
        }

        .baritem-2 {
          position: relative;
          min-height: 1px;
          box-sizing: border-box;
          padding-right: 8px;
          padding-left: 8px;
          float: left;
          width: 25%;
          text-align: right!important;
        }

        .baritem-3 {
          position: relative;
          min-height: 1px;
          box-sizing: border-box;
          padding-right: 8px;
          padding-left: 8px;
          float: left;
          width: 16.666667%;
          text-align: center!important;
        }

        .icon {
          vertical-align: middle;
        }

        .file {
          position: relative;
    overflow: hidden;
        }
        .list a {
        color: inherit;
        text-decoration: none;
        }

        .textfield-input {
          display: block;
          height: 36px;
          box-sizing: border-box;
          padding: 8px 0;
          font-family: inherit;
          font-size: 16px;
          background: 0 0;
          border: none;
          border-bottom: 1px solid rgba(255,255,255,.55);
          transition-timing-function: cubic-bezier(.4,0,.2,1);
          transition-duration: .2s;
          transition-property: border-bottom-color,padding-right,box-shadow,-webkit-box-shadow;
          width: calc(100% - 36px);
          margin-left: 36px;
        }

        .textfield-close {
          position: absolute;
          top: 0;
          right: 0;
          transform: scale(0);

        }
        #search_bar_form {
          display: none;
        }
    </style>
</head>
<body>
    <div id="folders-container">
    <div class="tool-bar">MediaHub Exchange
      <div class="toolbar-spacer"></div>
      <div class="search-bar">
        <button class="search-button" onclick="$('#close-button').css('transform', 'scale(1)'); $('.search-bar').css('width', '100%');$('#search_bar_form').css('display', 'block');">
          <i class="search-icon material-icons">search</i>
        </button>
        <form id="search_bar_form" method="get" action="/search">
          <input class="textfield-input" type="text" name="q" placeholder="Search in current folder" value="">
        </form>
        <button id="close-button" class="textfield-close info-button" onclick="$('#close-button').css('transform', 'scale(0)'); $('.search-bar').css('width', '36px');$('#search_bar_form').css('display', 'none');"><i class="mdui-icon material-icons">close</i></button>
      </div>
      <button class="info-button" onclick="console.log('button pressed');">
        <i class="search-icon material-icons">help_outline</i>
      </button>
    </div>
    
    </div>

    <div id="folders-container">
      <div class="folder-list">
        <div class="item-row">
          <ul class="list">
            <li class="list-item nohover">
              <div class="nav-bar">
                <button class="back-button material-icons" onclick="window.location.href = window.location.href.substring(0, window.location.href.lastIndexOf('/'));">arrow_back</button>
                <span class="nav-path"></span>
                <div class="toolbar-spacer"></div>
                <button class="newfolder-button material-icons" onclick="$('.newfolder-form').slideToggle();">create_new_folder</span>
                <button class="newfile-button material-icons" onclick="$('.newfile-form').slideToggle();">note_add</span>
              </div>
              <script>
                $(".nav-path").text(location.pathname)
                if (window.location.href.slice(0, -1) == window.location.origin)
                {
                  $('.back-button').prop('disabled', true);
                  $('.newfolder-button').prop('disabled', true);
                  $('.newfile-button').prop('disabled', true);
                }
                <% if (!isLoggedIn || !isOwned) { %>
                    $('.newfolder-button').prop('disabled', true);
                    $('.newfile-button').prop('disabled', true);
                <% } %>
                
              </script>
            </li>
            <li class="list-item nohover">
              <div class="baritem-1">
                File
                <i class="icon material-icons icon-sort" data-sort="name" data-order="more">expand_more</i>
              </div>
              <div class="baritem-2">
                Date Modified
                <i class="icon material-icons icon-sort" data-sort="name" data-order="more">expand_more</i>
              </div>
              <div class="baritem-3">
                Size
                <i class="icon material-icons icon-sort" data-sort="name" data-order="more">expand_more</i>
              </div>
              <div class="baritem-3">
                Actions
                <i class="icon material-icons icon-sort" data-sort="name" data-order="more">expand_more</i>
              </div>
            </li>
          </ul>
        </div>
        <div class="item-row">
          <ul class="list">
            <% folders.forEach(function(folder) { %>
              <%- folder %>
            <% }); %>
          </ul>
        </div>
      </div>
    </div>
    <div id="info-container">
      <div class="info-content">
        <div class="info-title"><span></span></div>
        <button class="close-button material-icons" onclick="$('#info-container').slideToggle();">close</button>
        <div class="divider"></div>
        <img class="card-image" src="" alt="Card Image">
        <div class="text-content">
          <p></p>
          <b>Media ID: </b><span id="media-id"></span>
          <br>
          <b>Genres: </b><span id="genres"></span>
          <br>
          <div class="series-info" hidden>
            <b>Num of Seasons: </b><span id="seasons"></span>
            <br>
            <b>Num of Episodes: </b><span id="episodes"></span>
            <br>
            <b>Status: </b><span id="status"></span>
            <br>
          </div>
          <b>Release Year: </b><span id="release"></span>
          <br>
          <b>Size: </b><span id="size"></span>
        </div>
      </div>

      <script>
        $(document).ready(function() {
            var mousePosition;
            var offset = [0,0];
            var div;
            var isDown = false;
    
            div = $("#info-container")
    
            div.on('mousedown', function(e) {
                isDown = true;
                offset = [
                    div.offset().left - e.clientX,
                    div.offset().top - e.clientY
                ];
            });
    
            $(document).on('mouseup', function() {
                isDown = false;
            });
    
            $(document).on('mousemove', function(event) {
                event.preventDefault();
                if (isDown) {
                    mousePosition = {
                        x: event.clientX,
                        y: event.clientY
                    };
                    div.css({
                        left: (mousePosition.x + offset[0]) + 'px',
                        right: 'auto',
                        top: (mousePosition.y + offset[1]) + 'px'
                    });
                }
            });
        });
    </script>
    <script>
      function showInfo(name, description, image, mediaId, size, genre, release, seasons, episodes, status) {
        if(!($('#info-container').is(":visible")))
        {
          $('#info-container').slideToggle();
        }
        $('.series-info').hide();
        $('.info-title').text(name);
        $('.text-content p').text(description);
        $('.card-image').attr('src', image);

        $("#media-id").text(mediaId);
        $("#genres").text(genre);
        $("#release").text(release);
        $("#size").text(size);

        if(seasons !== "undefined" || episodes !== "undefined" || status !== "undefined")
        {
          $('.series-info').show();
          $("#seasons").text(seasons);
          $("#episodes").text(episodes);
          $("#status").text(status);
        }
        
      }
    </script>
    </div>
    <div id="auth-container">
      <div class="auth-bar">
        <% if (isLoggedIn) { %>
          <button class="settings-button material-icons" onclick="$('.settings-form').slideToggle();">manage_accounts</button>
          <div class="toolbar-spacer"></div>
          <button class="logout-button material-icons">logout</button>
          <script>
            let logout = $(".logout-button");
            logout.on('click', function () {

            fetch('/logout', {method: "GET"})
              .then((response) => response.json())
              .then((data) => {
                if (data.success){
                location.reload();
                }
                else
                {
                  console.error("Error during login:", data.message);
                }
              })
              .catch((error) => {
                console.error("Error during login:", error);
              });
          });
          </script>
        <% } else { %>
        <button class="signup-button material-icons" onclick="$('.signup-form').slideToggle(); $('.login-form').css('display', 'none');">account_circle</button>
        <div class="toolbar-spacer"></div>
        <button class="login-button material-icons" onclick="$('.login-form').slideToggle(); $('.signup-form').css('display', 'none');">login</button>

        <% } %>
      </div>
      </form>
      <div>
      <% if (isLoggedIn) { %>
        <form class="settings-form">
          <button class="close-button material-icons" onclick="$('.settings-form').slideToggle();" type="button">close</button>
          <h3>Settings</h3>
  
          <div class="error-message"></div>
          <div class="success-message"></div>
  
          <label for="password">Password</label>
          <input type="password" placeholder="New Password" id="password">

          <button class="submit-button">Submit Changes</button>
          <button class="delete-button">Delete Account</button>
        </form>
      <% } else { %>
      <form class="login-form">
        <button class="close-button material-icons" onclick="$('.login-form').slideToggle();" type="button">close</button>
        <h3>Login</h3>

        <div class="error-message"></div>
        <div class="success-message"></div>

        <label for="username">Username</label>
        <input type="text" placeholder="Username" id="username">

        <label for="password">Password</label>
        <input type="password" placeholder="Password" id="password">

        <button class="submit-button">Log In</button>
      </form>

      <form class="signup-form">
        <button class="close-button material-icons" onclick="$('.signup-form').slideToggle();" type="button">close</button>
        <h3>Register</h3>

        <div class="error-message"></div>
        <div class="success-message"></div>

        <label for="username">Username</label>
        <input type="text" placeholder="Username" id="username">

        <label for="password">Password</label>
        <input type="password" placeholder="Password" id="password">

        <button class="submit-button">Sign In</button>
        
    </form>
    <% } %>
  </div>
    <script>
        let loginForm = $(".login-form");
        loginForm.on("submit", (e) => {
          e.preventDefault();
          const username = $(".login-form input#username").val();
          const password = $(".login-form input#password").val();

          fetch('/login', {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ username: username, password: password }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success){
              const successMessage = $(".login-form .success-message");
              successMessage.text(data.message);
              successMessage.slideToggle();
              setTimeout(400)
              location.reload();
              }
              else
              {
                const errorMessage = $(".login-form .error-message");
                errorMessage.text(`An error occurred during login. Error: ${data.message}`);
                errorMessage.slideToggle();
                console.error("Error during login:", data.message);
              }
            })
            .catch((error) => {
              const errorMessage = $(".login-form .error-message");
              errorMessage.text("An error occurred during login. Error: ", error);
              errorMessage.slideToggle();
              console.error("Error during login:", error);
            });
        });

        let signupForm = $(".signup-form");
        signupForm.on("submit", (e) => {
          e.preventDefault();
          const username = $(".signup-form input#username").val();
          const password = $(".signup-form input#password").val();

          fetch('/signup', {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ username: username, password: password }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success){
                const successMessage = $(".signup-form .success-message");
                successMessage.text(data.message);
                successMessage.slideToggle();
                setTimeout(400)
                location.reload();
              }
              else
              {
                const errorMessage = $(".signup-form .error-message");
                errorMessage.text(`An error occurred during signup. Error: ${data.message}`);
                errorMessage.slideToggle();
                console.error("Error during signup:", data.message);
              }
            })
            .catch((error) => {
              const errorMessage = $(".signup-form .error-message");
              errorMessage.text("An error occurred during signup. Error: ", error);
              errorMessage.slideToggle();
              console.error("Error during signup:", error);
            });
        });
    </script>
      </div>
    <div id="prompt-container">
      <form class="newfolder-form">
        <button class="close-button material-icons" onclick="$('.newfolder-form').slideToggle();" type="button">close</button>
        <h3>Create New Folder</h3>

        <div class="error-message"></div>
        <div class="success-message"></div>

        <label for="foldername">Folder Name</label>
        <input type="text" placeholder="New Folder Name" id="foldername">

        <button class="submit-button">Create</button>
        
      </form>

      <form class="folder-delete-form">
        <button class="close-button material-icons" onclick="$('.folder-delete-form').slideToggle();" type="button">close</button>
        <img src="/img/error.png" class="error-image"></img>
        <h3 class="confirm-title-message">Are you sure you want to delete this folder?</h3>

        <div class="error-message"></div>
        <div class="success-message"></div>

        <div class="folder-to-delete"></div>

        <h3 class="risk-message">Deleting this folder will delete all the folder and files inside it, be aware!</h3>
        <input type="checkbox" id="risk-check" name="risk-check">
        <label for="risk-check"> Check to Always skip the timer</label>
        <br>
        <label class="risk-label">(AT YOUR OWN RESPONSIBILITY!!!)</label>

        <button class="submit-button">Confirm</button>
        <button class="cancel-button" onclick="$('.folder-delete-form').slideToggle();" type="button">Cancel</button>
        
      </form>
      <form class="newfile-form">
        <button class="close-button material-icons" onclick="$('.newfile-form').slideToggle();" type="button">close</button>
        <h3>Create New File</h3>

        <div class="error-message"></div>
        <div class="success-message"></div>
        <div class="label-warpper">
          <label for="filename">File Name</label>
          <div class="search-warpper">
            <input type="text" placeholder="New File Name" id="filename" required>
            <button class="search-type-button" type="button">
              <i class="search-icon material-icons">search</i>
            </button>
          </div>
          <div class="search-menu">
            <div class="item-row">
              <ul class="list">
                <li class="list-item">
                  <div class="image-container">
                  </div>
                  <div class="media-details">
                  <span class="media-title">None</span>
                  <span class="media-description"></span>
                  <span class="media-id" hidden></span>
                  </div>
                </li>
              </ul>
            </div>
          </div>
        </div>
        <span class="selected-media-id" hidden></span>
        <label for="type">File Type</label>
        <select name="type" id="type">
          <option value="Game">Game</option>
          <option value="Movie">Movie</option>
          <option value="Series">Series</option>
          <option value="Anime">Anime</option>
        </select>
        <label for="size">Size <span class="optional-text">optional<span></label>
        <input type="text" placeholder="File Size" id="size">

        <button class="submit-button">Create</button>
        
      </form>

      <form class="file-delete-form">
        <button class="close-button material-icons" onclick="$('.file-delete-form').slideToggle();" type="button">close</button>
        <h3>Are you sure you want to delete this file?</h3>

        <div class="error-message"></div>
        <div class="success-message"></div>

        <div class="file-to-delete"></div>
        <div class="file-id" hidden></div>
        <div class="button-container">
          <button class="submit-button">Delete</button>
          <button class="cancel-button" onclick="$('.file-delete-form').slideToggle();" type="button">Cancel</button>
        </div>
        
      </form>
      <script>
          $('.search-type-button').on('click', function () {
            const fileTitle =  $(".newfile-form input#filename").val();
            const fileType = $('.newfile-form select#type').find(":selected").text();
            if($('.search-menu').is(':visible'))
            {
              $('.search-menu').slideToggle();
              $('.search-menu .list li:not(:first-child)').remove();
            }else{
              $('.search-menu .list li:not(:first-child)').remove();
            }
            
            fetch('/mediaSearch', {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ searchQuery: fileTitle, fileType: fileType }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success){

              
              $.each(data.results, function(_, result) {
                var standardItem = $('<li class="list-item">' +
                '<div class="image-container"></div>' +
                '<div class="media-details">' +
                '<span class="media-title"></span>' +
                '<span class="media-description"></span>' +
                '<span class="media-id" hidden></span>' +
                '</div>' +
                '</li>');
                
                standardItem.find('.media-title').text(result.name);
                standardItem.find('.media-description').text(result.release);
                standardItem.find('.media-id').text(result.mediaId);
                standardItem.find('.image-container').css('background-image', 'url("' + result.image + '")');
                $('.search-menu .list').append(standardItem);
              });

              $('.search-menu').slideToggle();
              }
              else
              {
                const errorMessage = $(".newfile-form .error-message");
                errorMessage.text(`An error occurred during fetching media data. Error: ${data.message}`);
                errorMessage.slideToggle();
                console.error("Error during fetching media data:", data.message);
              }
            })
            .catch((error) => {
              const errorMessage = $(".newfile-form .error-message");
              errorMessage.text("An error occurred during fetching media data. Error: ", error);
              errorMessage.slideToggle();
              console.error("Error during fetching media data:", error);
            });
          })
          $(".newfile-form .list").on("click", ".list-item", function(){
            const mediaTitle = $(this).find(".media-title").text();
            const mediaDescription = $(this).find(".media-description").text();

            if(mediaTitle === "None"){
              $(".newfile-form input#filename").attr('placeholder', 'please add the file name');
              $('.search-menu').slideToggle();
              return;
            }
            const mediaId = $(this).find(".media-id").text();
            $(".newfile-form .selected-media-id").text(mediaId);
            $(".newfile-form input#filename").val(mediaTitle);
            $('.search-menu').slideToggle();

          });

          $(document).mouseup(function(e) 
          {
              var container = $(".search-menu");

              // if the target of the click isn't the container nor a descendant of the container
              if (!container.is(e.target) && container.has(e.target).length === 0) 
              {
                  container.slideUp();
              }
          });
      </script>
      <script>
        let filedeleteForm = $(".file-delete-form");
        filedeleteForm.on("submit", (e) => {
          e.preventDefault();
          const fileId = $(".file-delete-form .file-id").text();

          fetch('/deleteFile', {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ FileId: fileId }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success){
              const successMessage = $(".file-delete-form .success-message");
              successMessage.text(data.message);
              successMessage.slideToggle();
              setTimeout(200)
              location.reload();
              }
              else
              {
                const errorMessage = $(".file-delete-form .error-message");
                errorMessage.text(`An error occurred during deleting the file. Error: ${data.message}`);
                errorMessage.slideToggle();
                console.error("Error during deleting the file:", data.message);
              }
            })
            .catch((error) => {
              const errorMessage = $(".file-delete-form .error-message");
              errorMessage.text("An error occurred during deleting the file. Error: ", error);
              errorMessage.slideToggle();
              console.error("Error during deleting the file:", error);
            });
        });
      </script>
      <script>
        let newfileForm = $(".newfile-form");
        newfileForm.on("submit", (e) => {
          e.preventDefault();
          const filename = $(".newfile-form input#filename").val();
          const size = $(".newfile-form input#size").val();
          const mediaId =  $(".newfile-form .selected-media-id").text();
          const IsNone = mediaId === "";
          const fileType = IsNone ? "None" : $('.newfile-form select#type').find(":selected").text();
          

          fetch('/createFile', {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ NewFileName: filename, FileParentPath: location.pathname, FileType: fileType, size: size, mediaId: mediaId}),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success){
              const successMessage = $(".newfile-form .success-message");
              successMessage.text(data.message);
              successMessage.slideToggle();
              setTimeout(200)
              location.reload();
              }
              else
              {
                const errorMessage = $(".newfile-form .error-message");
                errorMessage.text(`An error occurred during creating the file. Error: ${data.message}`);
                errorMessage.slideToggle();
                console.error("Error during creating the file:", data.message);
              }
            })
            .catch((error) => {
              const errorMessage = $(".newfile-form .error-message");
              errorMessage.text("An error occurred during creating the file. Error: ", error);
              errorMessage.slideToggle();
              console.error("Error during creating the file:", error);
            });
        });
      </script>
      <script>
        $(document).ready(function () {
        $('.file-delete-button').on('click', function () {
          var closestLi = $(this).closest('li');

          var titleValue = closestLi.find('div').attr('title');
          var IdValue = closestLi.find('span').text();
            
          $(".file-to-delete").text(location.pathname +'/'+ titleValue)
          $(".file-id").text(IdValue)

          $('.file-delete-form').slideToggle();
        });
      });

        $(document).ready(function () {
        $('.folder-delete-button').on('click', function () {
          var closestLi = $(this).closest('li');

          var hrefValue = closestLi.find('a').attr('href');
            
          $(".folder-to-delete").text(hrefValue)

          $('.folder-delete-form').slideToggle();
        });
      });

      const button = $('.folder-delete-button')
      const confirmButton = $('.folder-delete-form .submit-button');
      let sec = 10;
      let countdown = null;

      const updateButton = () => {
        confirmButton.text(`wait ${sec}s`)
        var checked = localStorage.getItem('risk-checked') === "true"; 
        
        if (sec === 0 || checked) {
          clearInterval(countdown);
          sec = 5;
          confirmButton.text('Confirm')
          confirmButton.prop('disabled', false)
          return;
        }

        sec--;
      }

      $('.folder-delete-button').on('click', function () {
          confirmButton.prop('disabled', true)
          updateButton();
          countdown = setInterval(function() {
            updateButton();
          }, 1000);
      });


      jQuery(function ($) {

        var checked = localStorage.getItem('risk-checked') === "true"; 
        $('#risk-check').prop('checked', checked);

        $('#risk-check').change(function () {
          var isChecked = $(this).is(':checked');
          localStorage.setItem('risk-checked', isChecked);
      });
    });
      </script>
    <script>
        let newfolderForm = $(".newfolder-form");
        newfolderForm.on("submit", (e) => {
          e.preventDefault();
          const foldername = $(".newfolder-form input#foldername").val();

          fetch('/createFolder', {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ NewFolderName: foldername, FolderParentPath: location.pathname }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success){
              const successMessage = $(".newfolder-form .success-message");
              successMessage.text(data.message);
              successMessage.slideToggle();
              setTimeout(200)
              location.reload();
              }
              else
              {
                const errorMessage = $(".newfolder-form .error-message");
                errorMessage.text(`An error occurred during creating the folder. Error: ${data.message}`);
                errorMessage.slideToggle();
                console.error("Error during creating the folder:", data.message);
              }
            })
            .catch((error) => {
              const errorMessage = $(".newfolder-form .error-message");
              errorMessage.text("An error occurred during creating the folder. Error: ", error);
              errorMessage.slideToggle();
              console.error("Error during creating the folder:", error);
            });
        });



        let deleteForm = $(".folder-delete-form");
        deleteForm.on("submit", (e) => {
          e.preventDefault();
          const foldername = $(".folder-delete-form .folder-to-delete").text();

          fetch('/deleteFolder', {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ FolderPath: foldername + '\\' }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success){
              const successMessage = $(".folder-delete-form .success-message");
              successMessage.text(data.message);
              successMessage.slideToggle();
              setTimeout(200)
              location.reload();
              }
              else
              {
                const errorMessage = $(".folder-delete-form .error-message");
                errorMessage.text(`An error occurred during deleting the folder. Error: ${data.message}`);
                errorMessage.slideToggle();
                console.error("Error during deleting the folder:", data.message);
              }
            })
            .catch((error) => {
              const errorMessage = $(".folder-delete-form .error-message");
              errorMessage.text("An error occurred during deleting the folder. Error: ", error);
              errorMessage.slideToggle();
              console.error("Error during deleting the folder:", error);
            });
        });
    </script>
    </div>
    </div>

</body>
</html>
